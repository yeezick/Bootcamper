{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Projects/Bootcamper/client/src/components/Form/Form.jsx\";\nimport React from 'react';\nimport parseHtml from 'html-react-parser';\nimport { handleChange } from '../../services/utils/formHandlers';\nimport { SingleActionButton } from '../Button/SingleActionButton';\nimport './Form.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = _ref => {\n  let {\n    formData,\n    formState\n  } = _ref;\n  const {\n    button,\n    handlers,\n    inputs\n  } = formData;\n  const [stateObject, setterFunction, handleSubmit] = formState;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: input.name,\n        children: parseHtml(input.labelText)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), input.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: input.options[0],\n        onChange: e => handleChange(e, input.name, setterFunction),\n        children: input.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, `${input.name}-${option}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        id: input.name,\n        name: input.name,\n        onChange: e => handleChange(e, input.name, setterFunction),\n        type: input.type,\n        value: stateObject[input.name],\n        required: input.required ? true : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, input.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(SingleActionButton, {\n      text: button.text,\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/mbp/Projects/Bootcamper/client/src/components/Form/Form.jsx"],"names":["React","parseHtml","handleChange","SingleActionButton","Form","formData","formState","button","handlers","inputs","stateObject","setterFunction","handleSubmit","map","input","name","labelText","type","options","e","option","required","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,IAAI,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA4B;AAC/C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAA+BJ,QAArC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,EAA8BC,YAA9B,IAA8CN,SAApD;AAEA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEM,YAAjC;AAAA,eACGH,MAAM,CAACI,GAAP,CAAYC,KAAD,iBACV;AAAsB,MAAA,SAAS,EAAC,eAAhC;AAAA,8BACE;AAAO,QAAA,OAAO,EAAEA,KAAK,CAACC,IAAtB;AAAA,kBAA6Bd,SAAS,CAACa,KAAK,CAACE,SAAP;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,KAAK,CAACG,IAAN,KAAe,QAAf,gBACC;AACE,QAAA,YAAY,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADhB;AAEE,QAAA,QAAQ,EAAGC,CAAD,IAAOjB,YAAY,CAACiB,CAAD,EAAIL,KAAK,CAACC,IAAV,EAAgBJ,cAAhB,CAF/B;AAAA,kBAIGG,KAAK,CAACI,OAAN,CAAcL,GAAd,CAAmBO,MAAD,iBACjB;AAAwC,UAAA,KAAK,EAAEA,MAA/C;AAAA,oBACGA;AADH,WAAc,GAAEN,KAAK,CAACC,IAAK,IAAGK,MAAO,EAArC;AAAA;AAAA;AAAA;AAAA,gBADD;AAJH;AAAA;AAAA;AAAA;AAAA,cADD,gBAYC;AACE,QAAA,EAAE,EAAEN,KAAK,CAACC,IADZ;AAEE,QAAA,IAAI,EAAED,KAAK,CAACC,IAFd;AAGE,QAAA,QAAQ,EAAGI,CAAD,IAAOjB,YAAY,CAACiB,CAAD,EAAIL,KAAK,CAACC,IAAV,EAAgBJ,cAAhB,CAH/B;AAIE,QAAA,IAAI,EAAEG,KAAK,CAACG,IAJd;AAKE,QAAA,KAAK,EAAEP,WAAW,CAACI,KAAK,CAACC,IAAP,CALpB;AAME,QAAA,QAAQ,EAAED,KAAK,CAACO,QAAN,GAAiB,IAAjB,GAAwB;AANpC;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA,OAAUP,KAAK,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eA2BE,QAAC,kBAAD;AAAoB,MAAA,IAAI,EAAER,MAAM,CAACe,IAAjC;AAAuC,MAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAnCM;KAAMlB,I","sourcesContent":["import React from 'react';\nimport parseHtml from 'html-react-parser';\nimport { handleChange } from '../../services/utils/formHandlers';\nimport { SingleActionButton } from '../Button/SingleActionButton';\nimport './Form.scss';\n\nexport const Form = ({ formData, formState }) => {\n  const { button, handlers, inputs } = formData;\n  const [stateObject, setterFunction, handleSubmit] = formState;\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      {inputs.map((input) => (\n        <div key={input.name} className=\"input-wrapper\">\n          <label htmlFor={input.name}>{parseHtml(input.labelText)}</label>\n          {input.type === 'select' ? (\n            <select\n              defaultValue={input.options[0]}\n              onChange={(e) => handleChange(e, input.name, setterFunction)}\n            >\n              {input.options.map((option) => (\n                <option key={`${input.name}-${option}`} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          ) : (\n            <input\n              id={input.name}\n              name={input.name}\n              onChange={(e) => handleChange(e, input.name, setterFunction)}\n              type={input.type}\n              value={stateObject[input.name]}\n              required={input.required ? true : null}\n            />\n          )}\n        </div>\n      ))}\n      <SingleActionButton text={button.text} type=\"submit\" />\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}