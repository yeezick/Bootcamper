{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/projects/Bootcamper/client/src/screens/SingleProject/SingleProject.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { EditProject } from '../EditProject/EditProject.jsx';\nimport { SingleActionButton } from '../../components/Button/SingleActionButton.jsx';\nimport { getOneProject } from '../../services/api/projects.js';\nimport './SingleProject.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SingleProject = () => {\n  _s();\n\n  const currentUser = useSelector(state => state.ui.user);\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState({});\n  const [edit, setEdit] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  let hours;\n  const option = project.time_commitment;\n\n  switch (option) {\n    case 'hobby':\n      hours = 10;\n      break;\n\n    case 'part-time':\n      hours = 20;\n      break;\n\n    case 'full-time':\n      hours = 30;\n      break;\n\n    default:\n      hours = 'any';\n  }\n\n  useEffect(() => {\n    const fetchProject = async () => {\n      const currentProject = await getOneProject(id);\n\n      if (currentProject) {\n        setProject(currentProject);\n        setLoaded(true);\n      }\n    };\n\n    fetchProject();\n  }, [id, edit]);\n\n  if (loaded && !edit) {\n    var _project$tools;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-project-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"project-title\",\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Project Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current team size: \", project.team_members.length + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), project.tools.length > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Built with:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_project$tools = project.tools) === null || _project$tools === void 0 ? void 0 : _project$tools.map(tool => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tool.name\n        }, tool._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Looking for collaborators who can commit ${hours} hours per week.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), currentUser._id === project.owner ? /*#__PURE__*/_jsxDEV(SingleActionButton, {\n        onClick: () => {\n          setEdit(true);\n        },\n        text: 'Edit Project Details'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else if (loaded && edit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(EditProject, {\n        project: project,\n        setEdit: setEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(SingleProject, \"dbk9W2TvXyhCY/t4QNOiSq4VuAw=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c = SingleProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleProject\");","map":{"version":3,"sources":["/Users/mbp/projects/Bootcamper/client/src/screens/SingleProject/SingleProject.jsx"],"names":["useState","useEffect","useParams","useSelector","EditProject","SingleActionButton","getOneProject","SingleProject","currentUser","state","ui","user","id","project","setProject","edit","setEdit","loaded","setLoaded","hours","option","time_commitment","fetchProject","currentProject","title","description","team_members","length","tools","map","tool","name","_id","owner"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { EditProject } from '../EditProject/EditProject.jsx';\nimport { SingleActionButton } from '../../components/Button/SingleActionButton.jsx';\nimport { getOneProject } from '../../services/api/projects.js';\nimport './SingleProject.scss';\n\nexport const SingleProject = () => {\n  const currentUser = useSelector(state => state.ui.user);\n  const { id } = useParams();\n  const [project, setProject] = useState({});\n  const [edit, setEdit] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  let hours;\n  const option = project.time_commitment\n  switch(option) {\n    case 'hobby':\n      hours = 10;\n      break;\n    case 'part-time':\n      hours = 20;\n      break;\n    case 'full-time':\n      hours = 30;\n      break;\n    default: \n      hours = 'any';\n  }\n  \n  useEffect(() => {\n    const fetchProject = async () => {\n    const currentProject = await getOneProject(id);\n    if (currentProject) {\n      setProject(currentProject);\n      setLoaded(true)\n    }\n  }\n    fetchProject();\n  }, [id, edit])\n\n  \n\n  if (loaded && !edit) {\n    return (\n      <div className='single-project-wrapper' >\n        <h2 className='project-title'>{project.title}</h2>\n        <h3>Project Description:</h3>\n        <p>{project.description}</p>\n        <p>Current team size: {project.team_members.length + 1}</p>\n        {project.tools.length > 0 ? <h3>Built with:</h3> : null}\n        <ul>\n          {project.tools?.map(tool => (\n            <li key={tool._id}>\n              {tool.name}\n            </li>\n          ))} \n        </ul>\n        <p>{`Looking for collaborators who can commit ${hours} hours per week.`}</p>\n        {currentUser._id === project.owner? <SingleActionButton onClick={() => {setEdit(true)}} text={'Edit Project Details'}/> : null}\n    </div>\n  ) } else if (loaded && edit) {\n    return (\n      <div>\n        <EditProject project={project} setEdit={setEdit}/>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        loading ... \n      </div>\n    )\n  }\n  };\n"]},"metadata":{},"sourceType":"module"}