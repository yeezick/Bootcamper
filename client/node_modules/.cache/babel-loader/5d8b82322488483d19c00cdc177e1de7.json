{"ast":null,"code":"import { api } from './apiConfig';\nexport const getAllUsers = async () => {\n  try {\n    const res = await api.get('/users');\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getOneUser = async id => {\n  try {\n    const res = await api.get(`/users/${id}`);\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateUser = async (id, userUpdate) => {\n  try {\n    const res = await api.put(`/users/${id}`, userUpdate);\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addPortfolioProject = async (id, newProject) => {\n  try {\n    const res = await api.patch(`/users/${id}`, newProject);\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const checkEmailAuth = async email => {\n  try {\n    const res = await api.post('/email', email);\n    return res.data.message;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const signUp = async credentials => {\n  try {\n    const res = await api.post('/sign-up', credentials);\n    const {\n      token,\n      user\n    } = res.data;\n    localStorage.setItem('token', token);\n    return user;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const signIn = async credentials => {\n  try {\n    const res = await api.post('/sign-in', credentials);\n    const {\n      token,\n      user\n    } = res.data;\n    localStorage.setItem('token', token); // const user = jwtDecode(res.data.token);\n\n    return user;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const signOut = async () => {\n  try {\n    localStorage.removeItem('token');\n    return true;\n  } catch (error) {\n    throw error;\n  }\n}; // missing endpoint\n\nexport const verify = async () => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    const {\n      data: payload\n    } = await api.get('/verify');\n    const {\n      data: user\n    } = await api.get(`/users/${payload.userID}`);\n    return user;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/mbp/Projects/Bootcamper/client/src/services/api/users.js"],"names":["api","getAllUsers","res","get","data","error","getOneUser","id","updateUser","userUpdate","put","addPortfolioProject","newProject","patch","checkEmailAuth","email","post","message","signUp","credentials","token","user","localStorage","setItem","signIn","signOut","removeItem","verify","getItem","payload","userID"],"mappings":"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","sourcesContent":["import { api } from './apiConfig';\n\nexport const getAllUsers = async () => {\n  try {\n    const res = await api.get('/users');\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getOneUser = async (id) => {\n  try {\n    const res = await api.get(`/users/${id}`);\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const updateUser = async (id, userUpdate) => {\n  try {\n    const res = await api.put(`/users/${id}`, userUpdate);\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const addPortfolioProject = async (id, newProject) => {\n  try {\n    const res = await api.patch(`/users/${id}`, newProject);\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const checkEmailAuth = async (email) => {\n  try {\n    const res = await api.post('/email', email);\n    return res.data.message;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const signUp = async (credentials) => {\n  try {\n    const res = await api.post('/sign-up', credentials);\n    const { token, user } = res.data;\n    localStorage.setItem('token', token);\n    return user;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const signIn = async (credentials) => {\n  try {\n    const res = await api.post('/sign-in', credentials);\n    const { token, user } = res.data;\n    localStorage.setItem('token', token);\n    // const user = jwtDecode(res.data.token);\n    return user;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const signOut = async () => {\n  try {\n    localStorage.removeItem('token');\n    return true;\n  } catch (error) {\n    throw error;\n  }\n}; // missing endpoint\n\nexport const verify = async () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const { data: payload } = await api.get('/verify');\n    const { data: user } = await api.get(`/users/${payload.userID}`);\n    return user;\n  }\n  return false;\n};\n"]},"metadata":{},"sourceType":"module"}