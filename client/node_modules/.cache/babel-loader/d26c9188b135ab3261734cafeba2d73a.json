{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n/**\n * what belongs in the project state?\n * states:\n * - all projects\n *\n * actions:\n * -\n */\n\nconst initialState = {\n  allProjects: [],\n  availableProjects: [],\n  // available to the user\n  isLoaded: false\n};\nexport const projectSlice = createSlice({\n  name: 'projects',\n  initialState,\n  reducers: {\n    fetchProjects(state, action) {\n      const {\n        allProjects,\n        blacklistedProjects\n      } = action.payload;\n      state.allProjects = allProjects;\n\n      if (blacklistedProjects.length > 0) {\n        const projectsAvailableToUser = allProjects.filter(project => blacklistedProjects.includes(project._id) === false);\n        state.availableProjects = projectsAvailableToUser;\n      } else {\n        state.availableProjects = allProjects;\n      }\n\n      state.isLoaded = true;\n    },\n\n    updateBlacklistedProjects(state, action) {\n      state.availableProjects = state.allProjects.filter(project => action.payload.includes(project._id) === false);\n    }\n\n  }\n});\nexport const projectActions = projectSlice.actions;","map":{"version":3,"sources":["/Users/mbp/Projects/Bootcamper/client/src/services/redux/slices/projectSlice.js"],"names":["createSlice","initialState","allProjects","availableProjects","isLoaded","projectSlice","name","reducers","fetchProjects","state","action","blacklistedProjects","payload","length","projectsAvailableToUser","filter","project","includes","_id","updateBlacklistedProjects","projectActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,iBAAiB,EAAE,EAFA;AAEI;AACvBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;AAMA,OAAO,MAAMC,YAAY,GAAGL,WAAW,CAAC;AACtCM,EAAAA,IAAI,EAAE,UADgC;AAEtCL,EAAAA,YAFsC;AAGtCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAM;AAAER,QAAAA,WAAF;AAAeS,QAAAA;AAAf,UAAuCD,MAAM,CAACE,OAApD;AACAH,MAAAA,KAAK,CAACP,WAAN,GAAoBA,WAApB;;AAEA,UAAIS,mBAAmB,CAACE,MAApB,GAA6B,CAAjC,EAAoC;AAClC,cAAMC,uBAAuB,GAAGZ,WAAW,CAACa,MAAZ,CAC7BC,OAAD,IAAaL,mBAAmB,CAACM,QAApB,CAA6BD,OAAO,CAACE,GAArC,MAA8C,KAD7B,CAAhC;AAGAT,QAAAA,KAAK,CAACN,iBAAN,GAA0BW,uBAA1B;AACD,OALD,MAKO;AACLL,QAAAA,KAAK,CAACN,iBAAN,GAA0BD,WAA1B;AACD;;AAEDO,MAAAA,KAAK,CAACL,QAAN,GAAiB,IAAjB;AACD,KAfO;;AAgBRe,IAAAA,yBAAyB,CAACV,KAAD,EAAQC,MAAR,EAAgB;AACvCD,MAAAA,KAAK,CAACN,iBAAN,GAA0BM,KAAK,CAACP,WAAN,CAAkBa,MAAlB,CACvBC,OAAD,IAAaN,MAAM,CAACE,OAAP,CAAeK,QAAf,CAAwBD,OAAO,CAACE,GAAhC,MAAyC,KAD9B,CAA1B;AAGD;;AApBO;AAH4B,CAAD,CAAhC;AA2BP,OAAO,MAAME,cAAc,GAAGf,YAAY,CAACgB,OAApC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n/**\n * what belongs in the project state?\n * states:\n * - all projects\n *\n * actions:\n * -\n */\n\nconst initialState = {\n  allProjects: [],\n  availableProjects: [], // available to the user\n  isLoaded: false,\n};\n\nexport const projectSlice = createSlice({\n  name: 'projects',\n  initialState,\n  reducers: {\n    fetchProjects(state, action) {\n      const { allProjects, blacklistedProjects } = action.payload;\n      state.allProjects = allProjects;\n\n      if (blacklistedProjects.length > 0) {\n        const projectsAvailableToUser = allProjects.filter(\n          (project) => blacklistedProjects.includes(project._id) === false\n        );\n        state.availableProjects = projectsAvailableToUser;\n      } else {\n        state.availableProjects = allProjects;\n      }\n\n      state.isLoaded = true;\n    },\n    updateBlacklistedProjects(state, action) {\n      state.availableProjects = state.allProjects.filter(\n        (project) => action.payload.includes(project._id) === false\n      );\n    },\n  },\n});\n\nexport const projectActions = projectSlice.actions;\n"]},"metadata":{},"sourceType":"module"}