{"ast":null,"code":"import axios from 'axios';\n\nconst getToken = () => {\n  return new Promise(resolve => {\n    resolve(`Bearer ${localStorage.getItem('token') || null}`);\n  });\n};\n\nexport const api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? 'https://bootcamper-dev-backend.herokuapp.com/api' : 'http://localhost:8001/api'\n});\napi.interceptors.request.use(async config => {\n  config.headers['Authorization'] = await getToken();\n  return config;\n}, error => {\n  console.log('Request error: ', error);\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/Users/mbp/Projects/Bootcamper/client/src/services/api/apiConfig.js"],"names":["axios","getToken","Promise","resolve","localStorage","getItem","api","create","baseURL","process","env","NODE_ENV","interceptors","request","use","config","headers","error","console","log","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAAK,EAAjD,CAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,OAAO,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC9BC,EAAAA,OAAO,EACLC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACI,kDADJ,GAEI;AAJwB,CAAb,CAAZ;AAOPL,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CACE,MAAOC,MAAP,IAAkB;AAChBA,EAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC,MAAMf,QAAQ,EAAhD;AACA,SAAOc,MAAP;AACD,CAJH,EAKGE,KAAD,IAAW;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACA,SAAOf,OAAO,CAACkB,MAAR,CAAeH,KAAf,CAAP;AACD,CARH","sourcesContent":["import axios from 'axios';\n\nconst getToken = () => {\n  return new Promise((resolve) => {\n    resolve(`Bearer ${localStorage.getItem('token') || null}`);\n  });\n};\n\nexport const api = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'production'\n      ? 'https://bootcamper-dev-backend.herokuapp.com/api'\n      : 'http://localhost:8001/api',\n});\n\napi.interceptors.request.use(\n  async (config) => {\n    config.headers['Authorization'] = await getToken();\n    return config;\n  },\n  (error) => {\n    console.log('Request error: ', error);\n    return Promise.reject(error);\n  }\n);\n"]},"metadata":{},"sourceType":"module"}