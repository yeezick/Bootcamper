{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/projects/Bootcamper/client/src/components/Projects/AboutProject/AboutProject.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SingleActionButton } from '../../Button/SingleActionButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AboutProject = _ref => {\n  _s();\n\n  var _projectInfo$tools;\n\n  let {\n    createNewProject,\n    handleSubmit,\n    project,\n    setEdit\n  } = _ref;\n  const currentUser = useSelector(state => state.ui.user);\n  const toolsList = useSelector(state => state.tools.allTools);\n  const [projectInfo, setProjectInfo] = useState({});\n  const [currentTool, setCurrentTool] = useState('');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProjectInfo({ ...projectInfo,\n      [name]: value\n    });\n  }; // tools related variables and functions\n\n\n  const handleToolChange = e => {\n    setCurrentTool(e.target.value);\n  };\n\n  const selectTool = e => {\n    e.preventDefault();\n\n    if (currentTool) {\n      const selectedTool = toolsList.find(tool => tool.name === currentTool);\n      setProjectInfo({ ...projectInfo,\n        tools: [...projectInfo.tools, selectedTool]\n      });\n    }\n\n    setCurrentTool('');\n  };\n\n  const removeTool = (e, id) => {\n    e.preventDefault();\n    const removeIndex = projectInfo.tools.findIndex(tool => tool._id === id);\n    projectInfo.tools.splice(removeIndex, 1);\n    setProjectInfo({ ...projectInfo,\n      tools: projectInfo.tools\n    });\n  };\n\n  useEffect(() => {\n    if (createNewProject) setProjectInfo({\n      description: '',\n      designer_count: 0,\n      engineer_count: 0,\n      owner: currentUser._id,\n      seeking: true,\n      time_commitment: 'no preference',\n      title: '',\n      tools: []\n    });\n    if (!createNewProject) setProjectInfo({ ...project\n    });\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about-project\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, projectInfo),\n      className: \"project-form form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Project Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        value: projectInfo.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Project Description (max 300 characters)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        value: projectInfo.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tools-form form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tools\",\n          children: \"What tech stack will it use?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"tools\",\n          list: \"tools-list\",\n          name: \"tools\",\n          onChange: handleToolChange,\n          value: currentTool\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"tools-list\",\n          children: toolsList === null || toolsList === void 0 ? void 0 : toolsList.map(tool => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tool.name\n          }, tool._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: selectTool,\n          children: \"Add Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-tools\",\n          children: projectInfo === null || projectInfo === void 0 ? void 0 : (_projectInfo$tools = projectInfo.tools) === null || _projectInfo$tools === void 0 ? void 0 : _projectInfo$tools.map(tool => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tool-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: tool.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => removeTool(e, tool._id),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, tool._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"designer-count\",\n        children: \"How many designers are you seeking?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"designer-count\",\n        min: \"0\",\n        name: \"designer_count\",\n        type: \"number\",\n        value: projectInfo.designer_count,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"engineer-count\",\n        children: \"How many engineers are you seeking?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"engineer-count\",\n        min: \"0\",\n        name: \"engineer_count\",\n        type: \"number\",\n        value: projectInfo.engineer_count,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time-commitment\",\n        children: \"...whose commitment level is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: project !== null && project !== void 0 && project.time_commitment ? project.time_commitment : 'no preference',\n        id: \"time-commitment\",\n        name: \"time_commitment\",\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"no preference\",\n          children: \"no preference\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hobby\",\n          children: \"hobby\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"part-time\",\n          children: \"part-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"full-time\",\n          children: \"full-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(SingleActionButton, {\n        type: 'submit',\n        text: createNewProject ? 'Create Project' : 'Update Project'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AboutProject, \"SrKb5fmyCabKrtB9fy50EnmF85U=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = AboutProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutProject\");","map":{"version":3,"sources":["/Users/mbp/projects/Bootcamper/client/src/components/Projects/AboutProject/AboutProject.jsx"],"names":["useEffect","useState","useSelector","SingleActionButton","AboutProject","createNewProject","handleSubmit","project","setEdit","currentUser","state","ui","user","toolsList","tools","allTools","projectInfo","setProjectInfo","currentTool","setCurrentTool","handleChange","e","name","value","target","handleToolChange","selectTool","preventDefault","selectedTool","find","tool","removeTool","id","removeIndex","findIndex","_id","splice","description","designer_count","engineer_count","owner","seeking","time_commitment","title","map"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SingleActionButton } from '../../Button/SingleActionButton';\n\nexport const AboutProject = ({ createNewProject, handleSubmit, project, setEdit }) => {\n  const currentUser = useSelector(state => state.ui.user)\n  const toolsList = useSelector(state => state.tools.allTools)\n  const [projectInfo, setProjectInfo] = useState({\n  })\n  const [currentTool, setCurrentTool] = useState('');\n\n  const handleChange = (e) => {\n    const {name, value} = e.target\n    setProjectInfo({\n      ...projectInfo,\n      [name]: value,\n    })\n  }\n  \n\n\n// tools related variables and functions\nconst handleToolChange = (e) => {\n  setCurrentTool(e.target.value)\n}\nconst selectTool = (e) => {\n  e.preventDefault();\n  if (currentTool) { const selectedTool = toolsList.find(tool => tool.name === currentTool)\n  setProjectInfo({\n    ...projectInfo,\n    tools: [...projectInfo.tools, selectedTool],\n  })\n}\n  setCurrentTool('')\n}\n\nconst removeTool = (e, id) => {\n  e.preventDefault();\n  const removeIndex = projectInfo.tools.findIndex(tool => tool._id === id)\n  projectInfo.tools.splice(removeIndex, 1);\n  setProjectInfo({\n    ...projectInfo,\n    tools: projectInfo.tools\n  })\n}\nuseEffect(() => {\n  if (createNewProject) setProjectInfo({\n          description: '',\n          designer_count: 0,\n          engineer_count: 0,\n          owner: currentUser._id, \n          seeking: true,\n          time_commitment: 'no preference',\n          title: '',\n          tools: [],\n        });\n  if (!createNewProject) setProjectInfo({...project})\n}, [currentUser])\n\n  return (\n    <div className=\"about-project\">\n      <form onSubmit={(e) => handleSubmit(e, projectInfo)} className='project-form form'>\n       <label htmlFor='title'>Project Title</label>\n       <input\n        id='title' \n        name='title'\n        type='text'\n        value={projectInfo.title}\n        onChange={handleChange}\n       />\n       <label htmlFor='description'>Project Description (max 300 characters)</label>\n       <textarea\n        id='description' \n        name='description'\n        value={projectInfo.description}\n        onChange={handleChange}\n       />\n       <div className=\"tools-form form\">\n        <label htmlFor=\"tools\">What tech stack will it use?</label>\n        <input \n          id='tools'\n          list='tools-list'\n          name='tools'\n          onChange={handleToolChange}\n          value={currentTool}\n        />\n        <datalist id='tools-list'>\n          {toolsList?.map(tool => (\n            <option key={tool._id} value={tool.name}/>\n          ))}\n        </datalist>\n       \n        <button onClick={selectTool}>Add Tool</button>\n        <div className=\"current-tools\">\n          {projectInfo?.tools?.map(tool => (\n            <div key={tool._id} className=\"tool-preview\">\n              <p>{tool.name}</p>\n              <button onClick={(e) => removeTool(e, tool._id)}>x</button>\n            </div>\n          ))}\n        </div>\n      </div>\n       <label htmlFor='designer-count'>How many designers are you seeking?</label>\n       <input\n        id='designer-count'\n        min='0' \n        name='designer_count'\n        type='number'\n        value={projectInfo.designer_count}\n        onChange={handleChange}\n       />\n       <label htmlFor='engineer-count'>How many engineers are you seeking?</label>\n       <input\n        id='engineer-count'\n        min='0' \n        name='engineer_count'\n        type='number'\n        value={projectInfo.engineer_count}\n        onChange={handleChange}\n       />\n       <label htmlFor='time-commitment'>...whose commitment level is:</label>\n       <select\n        defaultValue={project?.time_commitment ? project.time_commitment : 'no preference'}\n        id='time-commitment' \n        name='time_commitment'\n        onChange={handleChange}\n      >\n        <option value='no preference'>no preference</option>\n        <option value='hobby'>hobby</option>\n        <option value='part-time'>part-time</option>\n        <option value='full-time'>full-time</option>\n      </select>\n      <SingleActionButton type={'submit'} text={createNewProject ? 'Create Project' : 'Update Project'} />\n      </form>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}