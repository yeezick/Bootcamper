{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n/**\n * - check if user is finished editing account?\n * - could handle modals?\n *\n * states that the user needs\n * - user data\n * - the projects available to show user\n * - visible mobile menu\n *\n * actions:\n * - toggle mobile menu\n * - toggle edit user\n * - update user data\n *\n */\n\nconst initialState = {\n  blacklisted_projects: [],\n  finishedRegistration: false,\n  editMode: false,\n  user: '',\n  visibleMobileMenu: false\n};\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleMobileMenu(state) {\n      state.visibleMobileMenu = !state.visibleMobileMenu;\n    },\n\n    toggleEditMode(state) {\n      state.editMode = !state.editMode;\n    },\n\n    updateUser(state, action) {\n      const {\n        about,\n        interested_projects,\n        member_of_projects,\n        rejected_projects,\n        role\n      } = action.payload;\n\n      if (about && role) {\n        state.finishedRegistration = true;\n      }\n\n      state.user = action.payload;\n      state.blacklisted_projects = [...interested_projects, ...member_of_projects, ...rejected_projects];\n    }\n\n  }\n});\nexport const uiActions = uiSlice.actions;","map":{"version":3,"sources":["/Users/mbp/projects/Bootcamper/client/src/services/redux/slices/uiSlice.js"],"names":["createSlice","initialState","blacklisted_projects","finishedRegistration","editMode","user","visibleMobileMenu","uiSlice","name","reducers","toggleMobileMenu","state","toggleEditMode","updateUser","action","about","interested_projects","member_of_projects","rejected_projects","role","payload","uiActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,oBAAoB,EAAE,EADH;AAEnBC,EAAAA,oBAAoB,EAAE,KAFH;AAGnBC,EAAAA,QAAQ,EAAE,KAHS;AAInBC,EAAAA,IAAI,EAAE,EAJa;AAKnBC,EAAAA,iBAAiB,EAAE;AALA,CAArB;AAQA,OAAO,MAAMC,OAAO,GAAGP,WAAW,CAAC;AACjCQ,EAAAA,IAAI,EAAE,IAD2B;AAEjCP,EAAAA,YAFiC;AAGjCQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtBA,MAAAA,KAAK,CAACL,iBAAN,GAA0B,CAACK,KAAK,CAACL,iBAAjC;AACD,KAHO;;AAIRM,IAAAA,cAAc,CAACD,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACP,QAAN,GAAiB,CAACO,KAAK,CAACP,QAAxB;AACD,KANO;;AAORS,IAAAA,UAAU,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACxB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,mBAAT;AAA8BC,QAAAA,kBAA9B;AAAkDC,QAAAA,iBAAlD;AAAqEC,QAAAA;AAArE,UACJL,MAAM,CAACM,OADT;;AAEA,UAAIL,KAAK,IAAII,IAAb,EAAmB;AACjBR,QAAAA,KAAK,CAACR,oBAAN,GAA6B,IAA7B;AACD;;AACDQ,MAAAA,KAAK,CAACN,IAAN,GAAaS,MAAM,CAACM,OAApB;AACAT,MAAAA,KAAK,CAACT,oBAAN,GAA6B,CAC3B,GAAGc,mBADwB,EAE3B,GAAGC,kBAFwB,EAG3B,GAAGC,iBAHwB,CAA7B;AAKD;;AAnBO;AAHuB,CAAD,CAA3B;AA0BP,OAAO,MAAMG,SAAS,GAAGd,OAAO,CAACe,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n/**\n * - check if user is finished editing account?\n * - could handle modals?\n *\n * states that the user needs\n * - user data\n * - the projects available to show user\n * - visible mobile menu\n *\n * actions:\n * - toggle mobile menu\n * - toggle edit user\n * - update user data\n *\n */\n\nconst initialState = {\n  blacklisted_projects: [],\n  finishedRegistration: false,\n  editMode: false,\n  user: '',\n  visibleMobileMenu: false,\n};\n\nexport const uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleMobileMenu(state) {\n      state.visibleMobileMenu = !state.visibleMobileMenu;\n    },\n    toggleEditMode(state) {\n      state.editMode = !state.editMode;\n    },\n    updateUser(state, action) {\n      const { about, interested_projects, member_of_projects, rejected_projects, role } =\n        action.payload;\n      if (about && role) {\n        state.finishedRegistration = true;\n      }\n      state.user = action.payload;\n      state.blacklisted_projects = [\n        ...interested_projects,\n        ...member_of_projects,\n        ...rejected_projects,\n      ];\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\n"]},"metadata":{},"sourceType":"module"}