{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Projects/Bootcamper/client/src/screens/Roulette/Roulette.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'; // components\n// import { DoubleActionButton } from '../../components/Button/DoubleActionButton';\n// assets\n\nimport { addRejectedProject } from '../../services/redux/actions/uiActions';\nimport { showInterestInRoulette } from '../../services/redux/actions/projectActions'; // helpers\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst selectProjects = state => state.projects; // currently rerendering 5x\n\n\nexport const Roulette = () => {\n  _s();\n\n  const [currProject, setCurrProject] = useState(null);\n  const [currIndex, setCurrIndex] = useState(null);\n  const {\n    availableProjects,\n    isLoaded\n  } = useSelector(selectProjects);\n  useEffect(() => {\n    const showAvailableProjects = () => {\n      setCurrProject(availableProjects[0]);\n      setCurrIndex(0);\n    };\n\n    showAvailableProjects();\n  }, [isLoaded]);\n  useEffect(() => {// how do i eliminate the need to fetch all projects again?\n    // not doing anything\n  }, [currIndex]);\n  const rouletteButtonProps = {\n    availableProjects,\n    currIndex,\n    currProject,\n    setCurrIndex,\n    setCurrProject\n  };\n\n  if (!currProject) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProjectInfo, {\n      project: currProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RouletteButtons, {\n      rouletteButtonProps: rouletteButtonProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Roulette, \"YScbYJ9tJTrCePz7l+38s8fA9Bw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Roulette;\n\nconst ProjectInfo = _ref => {\n  var _project$tools;\n\n  let {\n    project\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roulette-visual\",\n      children: \"I am an image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: project.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: project.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roulette-tools\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Built with:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), (_project$tools = project.tools) === null || _project$tools === void 0 ? void 0 : _project$tools.map(tool => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Looking for collaborators who can commit at least X hours per week`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = ProjectInfo;\n\nconst RouletteButtons = _ref2 => {\n  _s2();\n\n  let {\n    rouletteButtonProps\n  } = _ref2;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    blacklisted_projects,\n    finishedRegistration,\n    user\n  } = useSelector(state => state.ui);\n  const {\n    availableProjects,\n    currIndex,\n    currProject,\n    setCurrIndex,\n    setCurrProject\n  } = rouletteButtonProps;\n\n  const declineProject = () => {\n    const blacklistedProjects = [...blacklisted_projects, currProject._id];\n    const body = {\n      rejected_projects: [...user.rejected_projects, currProject._id]\n    };\n    dispatch(addRejectedProject(user._id, body, blacklistedProjects));\n    skipProject();\n  };\n\n  const showInterest = () => {\n    const {\n      _id: projectId,\n      interested_applicants\n    } = currProject;\n    const {\n      _id: userId,\n      interested_projects\n    } = user;\n    const blacklistedProjects = [...blacklisted_projects, currProject._id];\n    const body = {\n      project: {\n        projectId,\n        projectUpdate: {\n          interested_applicants: [...interested_applicants, userId]\n        }\n      },\n      user: {\n        userId,\n        userUpdate: {\n          interested_projects: [...interested_projects, projectId]\n        }\n      }\n    };\n    dispatch(showInterestInRoulette(body, blacklistedProjects));\n    skipProject();\n  };\n\n  const skipProject = () => {\n    let newIndex = currIndex + 1;\n\n    if (newIndex === availableProjects.length && availableProjects.length !== 0) {\n      setCurrProject(availableProjects[0]);\n      setCurrIndex(0);\n    } else if (availableProjects.length === 0) {\n      setCurrProject(null);\n      setCurrIndex(null);\n    } else {\n      setCurrProject(availableProjects[newIndex]);\n      setCurrIndex(newIndex);\n    }\n  };\n\n  const redirectToCreateProject = () => {\n    navigate('/projects/:id/edit');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: finishedRegistration ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [availableProjects.length === 1 ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: skipProject,\n        children: \"Skip for now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: redirectToCreateProject,\n        children: \" Create my own\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: availableProjects.length === 1 ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: skipProject,\n        children: \"Skip for now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(RouletteButtons, \"A7QIwh0wHHQDFU8q84PUYDHQVds=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c3 = RouletteButtons;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Roulette\");\n$RefreshReg$(_c2, \"ProjectInfo\");\n$RefreshReg$(_c3, \"RouletteButtons\");","map":{"version":3,"sources":["/Users/mbp/Projects/Bootcamper/client/src/screens/Roulette/Roulette.jsx"],"names":["useEffect","useState","useNavigate","useDispatch","useSelector","addRejectedProject","showInterestInRoulette","selectProjects","state","projects","Roulette","currProject","setCurrProject","currIndex","setCurrIndex","availableProjects","isLoaded","showAvailableProjects","rouletteButtonProps","ProjectInfo","project","title","description","tools","map","tool","RouletteButtons","navigate","dispatch","blacklisted_projects","finishedRegistration","user","ui","declineProject","blacklistedProjects","_id","body","rejected_projects","skipProject","showInterest","projectId","interested_applicants","userId","interested_projects","projectUpdate","userUpdate","newIndex","length","redirectToCreateProject","display","flexDirection"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n// components\n// import { DoubleActionButton } from '../../components/Button/DoubleActionButton';\n// assets\nimport { addRejectedProject } from '../../services/redux/actions/uiActions';\nimport { showInterestInRoulette } from '../../services/redux/actions/projectActions';\n// helpers\nconst selectProjects = (state) => state.projects\n\n// currently rerendering 5x\nexport const Roulette = () => {\n  const [currProject, setCurrProject] = useState(null);\n  const [currIndex, setCurrIndex] = useState(null);\n  const { availableProjects, isLoaded } = useSelector(selectProjects);\n\n  useEffect(() => {\n    const showAvailableProjects = () => {\n      setCurrProject(availableProjects[0]);\n      setCurrIndex(0);\n    };\n    showAvailableProjects();\n  }, [isLoaded]);\n\n  useEffect(() => {\n    // how do i eliminate the need to fetch all projects again?\n    // not doing anything\n  }, [currIndex]);\n\n  const rouletteButtonProps = {\n    availableProjects,\n    currIndex,\n    currProject,\n    setCurrIndex,\n    setCurrProject,\n  };\n\n  if (!currProject) {\n    return <p>Loading</p>;\n  }\n\n  return (\n    <div>\n      <ProjectInfo project={currProject} />\n      <RouletteButtons rouletteButtonProps={rouletteButtonProps} />\n    </div>\n  );\n};\n\nconst ProjectInfo = ({ project }) => {\n  return (\n    <>\n      <div className=\"roulette-visual\">I am an image</div>\n      <p>{project.title}</p>\n      <p>{project.description}</p>\n      <div className=\"roulette-tools\">\n        <p> Built with:</p>\n        {project.tools?.map((tool) => (\n          <p>{tool}</p>\n        ))}\n      </div>\n      <p>{`Looking for collaborators who can commit at least X hours per week`}</p>\n    </>\n  );\n};\n\nconst RouletteButtons = ({ rouletteButtonProps }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { blacklisted_projects, finishedRegistration, user } = useSelector((state) => state.ui);\n  const { availableProjects, currIndex, currProject, setCurrIndex, setCurrProject } =\n    rouletteButtonProps;\n\n  const declineProject = () => {\n    const blacklistedProjects = [...blacklisted_projects, currProject._id];\n    const body = {\n      rejected_projects: [...user.rejected_projects, currProject._id],\n    };\n\n    dispatch(addRejectedProject(user._id, body, blacklistedProjects));\n    skipProject();\n  };\n\n  const showInterest = () => {\n    const { _id: projectId, interested_applicants } = currProject;\n    const { _id: userId, interested_projects } = user;\n    const blacklistedProjects = [...blacklisted_projects, currProject._id];\n    const body = {\n      project: {\n        projectId,\n        projectUpdate: {\n          interested_applicants: [...interested_applicants, userId],\n        },\n      },\n      user: {\n        userId,\n        userUpdate: {\n          interested_projects: [...interested_projects, projectId],\n        },\n      },\n    };\n\n    dispatch(showInterestInRoulette(body, blacklistedProjects));\n    skipProject();\n  };\n\n  const skipProject = () => {\n    let newIndex = currIndex + 1;\n    if (newIndex === availableProjects.length && availableProjects.length !== 0) {\n      setCurrProject(availableProjects[0]);\n      setCurrIndex(0);\n    } else if (availableProjects.length === 0) {\n      setCurrProject(null);\n      setCurrIndex(null);\n    } else {\n      setCurrProject(availableProjects[newIndex]);\n      setCurrIndex(newIndex);\n    }\n  };\n\n  const redirectToCreateProject = () => {\n    navigate('/projects/:id/edit');\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      {finishedRegistration ? (\n        <>\n          {/* <DoubleActionButton\n            leftText=\"I'll Pass\"\n            leftOnClick={declineProject}\n            rightText=\"I'm Interested\"\n            rightOnClick={showInterest}\n          /> */}\n          {availableProjects.length === 1 ? null : (\n            <button onClick={skipProject}>Skip for now</button>\n          )}\n          <button onClick={redirectToCreateProject}> Create my own</button>\n        </>\n      ) : (\n        <>\n          {availableProjects.length === 1 ? null : (\n            <button onClick={skipProject}>Skip for now</button>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}