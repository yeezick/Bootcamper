{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/Projects/Bootcamper/client/src/screens/SignIn/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // assets\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../../services/redux/actions/uiActions.js';\nimport './SignIn.scss';\nimport { handleChange } from '../../services/utils/formHandlers';\nimport { SingleActionButton } from '../../components/Button/SingleActionButton';\nimport { checkEmailAuth, signOut, verify } from '../../services/api/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignIn = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    _id: userId\n  } = useSelector(state => state.ui.user);\n  const [authError, setAuthError] = useState(null);\n  const [noAccountError, setNoAccountError] = useState(null);\n  const [loginInfo, setLoginInfo] = useState({\n    email: '',\n    password: ''\n  });\n  const routeToEditProfile = {\n    handler: null,\n    title: 'Sign In'\n  };\n  useEffect(() => {\n    signOut();\n  }, []);\n\n  const handleSignIn = async event => {\n    event.preventDefault();\n    await dispatch(loginUser(loginInfo));\n    const user = await verify();\n\n    if (user.email === loginInfo.email) {\n      navigate(`/users/${userId}/edit`);\n    } else {\n      setAuthError('Invalid credentials. Please check your details and try again.');\n      setLoginInfo(prevState => {\n        return { ...prevState,\n          password: ''\n        };\n      });\n    }\n  };\n\n  const validEmail = async () => {\n    const emailReq = {\n      email: loginInfo.email\n    };\n    const res = await checkEmailAuth(emailReq);\n\n    if (!res) {\n      setNoAccountError('Account not found.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in-screen auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form sign-in\",\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          id: \"email\",\n          name: \"email\",\n          onChange: e => handleChange(e, 'email', setLoginInfo),\n          type: \"email\",\n          value: loginInfo['email'],\n          onFocus: () => setNoAccountError(false),\n          onBlur: () => validEmail(),\n          autoComplete: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-error\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: noAccountError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          id: \"password\",\n          name: \"password\",\n          onChange: e => handleChange(e, 'password', setLoginInfo),\n          type: \"password\",\n          value: loginInfo['password'],\n          onFocus: () => setAuthError(null),\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-error\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: authError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-btn-container\",\n        children: /*#__PURE__*/_jsxDEV(SingleActionButton, {\n          payload: routeToEditProfile,\n          type: \"submit\",\n          text: \"Sign In\",\n          style: \"default\",\n          size: \"long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"femgAFJ0+gfZU/mHF//RV1BJjJk=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/mbp/Projects/Bootcamper/client/src/screens/SignIn/SignIn.jsx"],"names":["useEffect","useState","useNavigate","useDispatch","useSelector","loginUser","handleChange","SingleActionButton","checkEmailAuth","signOut","verify","SignIn","navigate","dispatch","_id","userId","state","ui","user","authError","setAuthError","noAccountError","setNoAccountError","loginInfo","setLoginInfo","email","password","routeToEditProfile","handler","title","handleSignIn","event","preventDefault","prevState","validEmail","emailReq","res","e"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// assets\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../../services/redux/actions/uiActions.js';\nimport './SignIn.scss';\nimport { handleChange } from '../../services/utils/formHandlers';\nimport { SingleActionButton } from '../../components/Button/SingleActionButton';\nimport { checkEmailAuth, signOut, verify } from '../../services/api/users';\n\nexport const SignIn = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { _id: userId } = useSelector((state) => state.ui.user);\n  const [authError, setAuthError] = useState(null);\n  const [noAccountError, setNoAccountError] = useState(null);\n  const [loginInfo, setLoginInfo] = useState({\n    email: '',\n    password: '',\n  });\n\n  const routeToEditProfile = {\n    handler: null,\n    title: 'Sign In',\n  };\n\n  useEffect(() => {\n    signOut();\n  }, []);\n\n  const handleSignIn = async (event) => {\n    event.preventDefault();\n    await dispatch(loginUser(loginInfo));\n    const user = await verify();\n    if (user.email === loginInfo.email) {\n      navigate(`/users/${userId}/edit`);\n    } else {\n      setAuthError('Invalid credentials. Please check your details and try again.');\n      setLoginInfo((prevState) => {\n        return {\n          ...prevState,\n          password: '',\n        };\n      });\n    }\n  };\n\n  const validEmail = async () => {\n    const emailReq = { email: loginInfo.email };\n    const res = await checkEmailAuth(emailReq);\n    if (!res) {\n      setNoAccountError('Account not found.');\n    }\n  };\n\n  return (\n    <div className=\"sign-in-screen auth-form\">\n      <p>Log In</p>\n      <form className=\"form sign-in\" onSubmit={handleSignIn}>\n        <div className=\"input-wrapper\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            required\n            id=\"email\"\n            name=\"email\"\n            onChange={(e) => handleChange(e, 'email', setLoginInfo)}\n            type=\"email\"\n            value={loginInfo['email']}\n            onFocus={() => setNoAccountError(false)}\n            onBlur={() => validEmail()}\n            autoComplete=\"on\"\n          />\n        </div>\n        <div className=\"form-error\">\n          <h6>{noAccountError}</h6>\n        </div>\n        <div className=\"input-wrapper\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            required\n            id=\"password\"\n            name=\"password\"\n            onChange={(e) => handleChange(e, 'password', setLoginInfo)}\n            type=\"password\"\n            value={loginInfo['password']}\n            onFocus={() => setAuthError(null)}\n            autoComplete=\"current-password\"\n          />\n        </div>\n        <div className=\"form-error\">\n          <h6>{authError}</h6>\n        </div>\n        <div className=\"action-btn-container\">\n          {/* Remove text setting once singleActionButton is merged */}\n          <SingleActionButton\n            payload={routeToEditProfile}\n            type=\"submit\"\n            text=\"Sign In\"\n            style=\"default\"\n            size=\"long\"\n          />\n        </div>\n      </form>\n      {/* Placeholder for future functionality  */}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}