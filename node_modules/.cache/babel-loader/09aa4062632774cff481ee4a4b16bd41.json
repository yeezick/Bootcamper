{"ast":null,"code":"var _jsxFileName = \"/Users/erickmanrique/Dev/Bootcamper/client/src/components/Projects/PortfolioCard/PortfolioCard.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Form } from '../../Form/Form';\nimport { Header } from '../../Header/Header';\nimport { uiActions } from '../../../services/redux/slices/uiSlice';\nimport { portfolioProjectForm } from '../../../services/formData';\nimport { addPortfolioProject } from '../../../services/api/users.js';\nimport './PortfolioCard.scss';\nimport { handleChange } from '../../../services/utils/formHandlers';\nimport { addRejectedProject } from '../../../services/redux/actions/uiActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPortfolioProject = () => {\n  _s();\n\n  const {\n    _id: userId\n  } = useSelector(state => state.ui.user);\n  const dispatch = useDispatch();\n  const [newProject, setNewProject] = useState({\n    image: 'https://pbs.twimg.com/media/E5KGFT9X0AQzzaR?format=jpg&name=240x240',\n    project_description: '',\n    project_link: '',\n    project_title: '',\n    project_id: nanoid()\n  }); // ideally updates the database on each new project without slowing the app down\n  // this way the user can add a new project and on refresh, load their work.\n\n  const handleNewProject = async e => {\n    e.preventDefault();\n\n    try {\n      const res = await addPortfolioProject(userId, newProject);\n      dispatch(uiActions.updateUser(res));\n      setNewProject({\n        image: 'https://pbs.twimg.com/media/E5KGFT9X0AQzzaR?format=jpg&name=240x240',\n        project_description: '',\n        project_link: '',\n        project_title: '',\n        project_id: nanoid()\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const header = {\n    title: 'Portfolio Projects',\n    text: ' Add your personal projects here. You can add as many as you want, but to avoid cluttering we recommend a maximum of 3.'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-portfolio-project\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headerTitle: header.title,\n      headerText: header.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      formData: portfolioProjectForm,\n      formState: [newProject, setNewProject, handleNewProject]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPortfolioProject, \"/auta1eTJkQ34WO8ptdXcIriYJ4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AddPortfolioProject;\nexport const ShowPortfolioProjects = _ref => {\n  _s2();\n\n  var _currUser$portfolio_p, _currUser$portfolio_p2;\n\n  let {\n    currUser\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const updateEditedProject = (editedProject, removeProject) => {\n    const {\n      portfolio_projects,\n      _id: userId\n    } = currUser;\n    const {\n      project_id: currentId\n    } = editedProject;\n    let copyPortfolioProjects = [...portfolio_projects];\n\n    if (removeProject) {\n      copyPortfolioProjects = portfolio_projects.filter(project => project.project_id !== currentId);\n    } else {\n      const editedIdx = portfolio_projects.findIndex(project => project.project_id === currentId);\n      copyPortfolioProjects[editedIdx] = editedProject;\n    }\n\n    dispatch(addRejectedProject(userId, {\n      portfolio_projects: copyPortfolioProjects\n    }));\n  };\n\n  return (currUser === null || currUser === void 0 ? void 0 : (_currUser$portfolio_p = currUser.portfolio_projects) === null || _currUser$portfolio_p === void 0 ? void 0 : _currUser$portfolio_p.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-portfolio-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \" Your Portfolio Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), currUser === null || currUser === void 0 ? void 0 : (_currUser$portfolio_p2 = currUser.portfolio_projects) === null || _currUser$portfolio_p2 === void 0 ? void 0 : _currUser$portfolio_p2.map((project, idx) => /*#__PURE__*/_jsxDEV(PortfolioProject, {\n      project: project,\n      updateEditedProject: updateEditedProject\n    }, `portfolioProject-${idx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(ShowPortfolioProjects, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = ShowPortfolioProjects;\n\nconst PortfolioProject = _ref2 => {\n  _s3();\n\n  let {\n    updateEditedProject,\n    project\n  } = _ref2;\n  const [currProject, setCurrProject] = useState({\n    image: 'https://pbs.twimg.com/media/E5KGFT9X0AQzzaR?format=jpg&name=240x240',\n    project_description: '',\n    project_link: '',\n    project_title: '',\n    project_id: nanoid()\n  });\n  const [editProject, toggleEditProject] = useState(false);\n  const {\n    image,\n    project_description,\n    project_link,\n    project_title\n  } = currProject;\n  useEffect(() => {\n    const onLoad = () => {\n      setCurrProject(project);\n    };\n\n    onLoad();\n  }, [project]);\n\n  const handleProjectUpdate = (e, removeProject) => {\n    updateEditedProject(currProject, removeProject);\n    toggleEditProject(!editProject);\n  };\n\n  if (editProject) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-portfolio-project\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleEditProject(!editProject),\n        children: \"toggle edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleProjectUpdate(e, 'remove project'),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"\",\n          value: project_title,\n          onChange: e => handleChange(e, 'project_title', setCurrProject)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"\",\n          value: project_description,\n          onChange: e => handleChange(e, 'project_description', setCurrProject)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: [\"Link:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"\",\n          value: project_link,\n          onChange: e => handleChange(e, 'project_link', setCurrProject)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProjectUpdate,\n        children: \" SAVE EDIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-project\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        width: '45px'\n      },\n      onClick: () => {\n        toggleEditProject(!editProject);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: project_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: project_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project_link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(PortfolioProject, \"fa18qAjnLArJbOqFs4nkFNlFFps=\");\n\n_c3 = PortfolioProject;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AddPortfolioProject\");\n$RefreshReg$(_c2, \"ShowPortfolioProjects\");\n$RefreshReg$(_c3, \"PortfolioProject\");","map":{"version":3,"sources":["/Users/erickmanrique/Dev/Bootcamper/client/src/components/Projects/PortfolioCard/PortfolioCard.jsx"],"names":["useState","useEffect","useDispatch","useSelector","nanoid","Form","Header","uiActions","portfolioProjectForm","addPortfolioProject","handleChange","addRejectedProject","AddPortfolioProject","_id","userId","state","ui","user","dispatch","newProject","setNewProject","image","project_description","project_link","project_title","project_id","handleNewProject","e","preventDefault","res","updateUser","error","console","header","title","text","ShowPortfolioProjects","currUser","updateEditedProject","editedProject","removeProject","portfolio_projects","currentId","copyPortfolioProjects","filter","project","editedIdx","findIndex","length","map","idx","PortfolioProject","currProject","setCurrProject","editProject","toggleEditProject","onLoad","handleProjectUpdate","width"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Form } from '../../Form/Form';\nimport { Header } from '../../Header/Header';\n\nimport { uiActions } from '../../../services/redux/slices/uiSlice';\nimport { portfolioProjectForm } from '../../../services/formData';\nimport { addPortfolioProject } from '../../../services/api/users.js';\nimport './PortfolioCard.scss';\nimport { handleChange } from '../../../services/utils/formHandlers';\nimport { addRejectedProject } from '../../../services/redux/actions/uiActions';\n\nexport const AddPortfolioProject = () => {\n  const { _id: userId } = useSelector((state) => state.ui.user);\n  const dispatch = useDispatch();\n  const [newProject, setNewProject] = useState({\n    image: 'https://pbs.twimg.com/media/E5KGFT9X0AQzzaR?format=jpg&name=240x240',\n    project_description: '',\n    project_link: '',\n    project_title: '',\n    project_id: nanoid(),\n  });\n  // ideally updates the database on each new project without slowing the app down\n  // this way the user can add a new project and on refresh, load their work.\n  const handleNewProject = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await addPortfolioProject(userId, newProject);\n      dispatch(uiActions.updateUser(res));\n      setNewProject({\n        image: 'https://pbs.twimg.com/media/E5KGFT9X0AQzzaR?format=jpg&name=240x240',\n        project_description: '',\n        project_link: '',\n        project_title: '',\n        project_id: nanoid(),\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const header = {\n    title: 'Portfolio Projects',\n    text: ' Add your personal projects here. You can add as many as you want, but to avoid cluttering we recommend a maximum of 3.',\n  };\n\n  return (\n    <div className=\"add-portfolio-project\">\n      <Header headerTitle={header.title} headerText={header.text} />\n      <Form\n        formData={portfolioProjectForm}\n        formState={[newProject, setNewProject, handleNewProject]}\n      />\n    </div>\n  );\n};\n\nexport const ShowPortfolioProjects = ({ currUser }) => {\n  const dispatch = useDispatch();\n\n  const updateEditedProject = (editedProject, removeProject) => {\n    const { portfolio_projects, _id: userId } = currUser;\n    const { project_id: currentId } = editedProject;\n    let copyPortfolioProjects = [...portfolio_projects];\n    if (removeProject) {\n      copyPortfolioProjects = portfolio_projects.filter(\n        (project) => project.project_id !== currentId\n      );\n    } else {\n      const editedIdx = portfolio_projects.findIndex((project) => project.project_id === currentId);\n      copyPortfolioProjects[editedIdx] = editedProject;\n    }\n    dispatch(addRejectedProject(userId, { portfolio_projects: copyPortfolioProjects }));\n  };\n\n  return (\n    currUser?.portfolio_projects?.length > 0 && (\n      <div className=\"show-portfolio-wrapper\">\n        <header> Your Portfolio Projects</header>\n        {currUser?.portfolio_projects?.map((project, idx) => (\n          <PortfolioProject\n            key={`portfolioProject-${idx}`}\n            project={project}\n            updateEditedProject={updateEditedProject}\n          />\n        ))}\n      </div>\n    )\n  );\n};\n\nconst PortfolioProject = ({ updateEditedProject, project }) => {\n  const [currProject, setCurrProject] = useState({\n    image: 'https://pbs.twimg.com/media/E5KGFT9X0AQzzaR?format=jpg&name=240x240',\n    project_description: '',\n    project_link: '',\n    project_title: '',\n    project_id: nanoid(),\n  });\n  const [editProject, toggleEditProject] = useState(false);\n  const { image, project_description, project_link, project_title } = currProject;\n\n  useEffect(() => {\n    const onLoad = () => {\n      setCurrProject(project);\n    };\n    onLoad();\n  }, [project]);\n\n  const handleProjectUpdate = (e, removeProject) => {\n    updateEditedProject(currProject, removeProject);\n    toggleEditProject(!editProject);\n  };\n\n  if (editProject) {\n    return (\n      <div className=\"edit-portfolio-project\">\n        <button onClick={() => toggleEditProject(!editProject)}>toggle edit</button>\n        <button onClick={(e) => handleProjectUpdate(e, 'remove project')}>delete</button>\n        {/* reuse of inputs is opportunity to consolidate using a map method */}\n        <label className=\"\">\n          Title:\n          <input\n            type=\"text\"\n            className=\"\"\n            value={project_title}\n            onChange={(e) => handleChange(e, 'project_title', setCurrProject)}\n          />\n        </label>\n\n        <label className=\"\">\n          Description:\n          <input\n            type=\"text\"\n            className=\"\"\n            value={project_description}\n            onChange={(e) => handleChange(e, 'project_description', setCurrProject)}\n          />\n        </label>\n\n        <label className=\"\">\n          Link:\n          <input\n            type=\"text\"\n            className=\"\"\n            value={project_link}\n            onChange={(e) => handleChange(e, 'project_link', setCurrProject)}\n          />\n        </label>\n        <button onClick={handleProjectUpdate}> SAVE EDIT</button>\n      </div>\n    );\n  }\n  return (\n    <div className=\"portfolio-project\">\n      <button\n        style={{ width: '45px' }}\n        onClick={() => {\n          toggleEditProject(!editProject);\n        }}\n      ></button>\n      <img src={image} alt={project_title} />\n      <div className=\"portfolio-content\">\n        <p>{project_title}</p>\n        {/* there should be an expand description that would expand the card and show the the project's description */}\n        <p>{project_description}</p>\n        <p>{project_link}</p>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}