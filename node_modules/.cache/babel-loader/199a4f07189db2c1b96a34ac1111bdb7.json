{"ast":null,"code":"var _jsxFileName = \"/Users/erickmanrique/Dev/Bootcamper/client/src/screens/SignIn/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // assets\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../../services/redux/actions/uiActions.js';\nimport '../SignUp/SignUp.scss';\nimport { handleChange } from '../../services/utils/formHandlers';\nimport { SingleActionButton } from '../../components/Button/SingleActionButton';\nimport { checkEmailAuth, signOut, verify } from '../../services/api/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignIn = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    _id: userId\n  } = useSelector(state => state.ui.user);\n  const [authError, setAuthError] = useState(null);\n  const [noAccountError, setNoAccountError] = useState(null);\n  const [loginInfo, setLoginInfo] = useState({\n    email: 'test@test.com',\n    password: 'test'\n  });\n  useEffect(() => {\n    signOut();\n  }, []);\n\n  const handleSignIn = async event => {\n    event.preventDefault();\n    await dispatch(loginUser(loginInfo));\n    const user = await verify();\n\n    if (user.email === loginInfo.email) {\n      navigate(`/users/${userId}/edit`);\n    } else {\n      setAuthError('Invalid credentials. Please check your details and try again.');\n      setLoginInfo(prevState => {\n        return { ...prevState,\n          password: ''\n        };\n      });\n    }\n  };\n\n  const validEmail = async () => {\n    const emailReq = {\n      email: loginInfo.email\n    };\n    const res = await checkEmailAuth(emailReq);\n\n    if (!res) {\n      setNoAccountError('Account not found.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in-screen auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Welcome Back!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form sign-in\",\n      onSubmit: handleSignIn,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          id: \"email\",\n          name: \"email\",\n          onChange: e => handleChange(e, 'email', setLoginInfo),\n          type: \"email\",\n          value: loginInfo['email'],\n          onFocus: () => setNoAccountError(false),\n          onBlur: () => validEmail()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-error\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: noAccountError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          id: \"password\",\n          name: \"password\",\n          onChange: e => handleChange(e, 'password', setLoginInfo),\n          type: \"password\",\n          value: loginInfo['password'],\n          onFocus: () => setAuthError(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-error\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: authError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          const signedInUser = await signIn(loginInfo);\n\n          if (signedInUser) {\n            dispatch(uiActions.updateUser(signedInUser)); // check this params functionality on edit land\n\n            navigate('EditProfile', {\n              userID: signedInUser._id\n            });\n          } else {\n            setLoginInfo(prevState => {\n              return { ...prevState,\n                password: ''\n              };\n            });\n          }\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      children: \"Forgot Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"kgQ45gfKIdXDLn7TOdUjW7ZrjyE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/erickmanrique/Dev/Bootcamper/client/src/screens/SignIn/SignIn.jsx"],"names":["useEffect","useState","useNavigate","useDispatch","useSelector","loginUser","handleChange","SingleActionButton","checkEmailAuth","signOut","verify","SignIn","navigate","dispatch","_id","userId","state","ui","user","authError","setAuthError","noAccountError","setNoAccountError","loginInfo","setLoginInfo","email","password","handleSignIn","event","preventDefault","prevState","validEmail","emailReq","res","e","signedInUser","signIn","uiActions","updateUser","userID"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// assets\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../../services/redux/actions/uiActions.js';\nimport '../SignUp/SignUp.scss';\nimport { handleChange } from '../../services/utils/formHandlers';\nimport { SingleActionButton } from '../../components/Button/SingleActionButton';\nimport { checkEmailAuth, signOut, verify } from '../../services/api/users';\n\nexport const SignIn = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { _id: userId } = useSelector((state) => state.ui.user);\n  const [authError, setAuthError] = useState(null);\n  const [noAccountError, setNoAccountError] = useState(null);\n  const [loginInfo, setLoginInfo] = useState({\n    email: 'test@test.com',\n    password: 'test',\n  });\n\n  useEffect(() => {\n    signOut();\n  }, []);\n\n  const handleSignIn = async (event) => {\n    event.preventDefault();\n    await dispatch(loginUser(loginInfo));\n    const user = await verify();\n    if (user.email === loginInfo.email) {\n      navigate(`/users/${userId}/edit`);\n    } else {\n      setAuthError('Invalid credentials. Please check your details and try again.');\n      setLoginInfo((prevState) => {\n        return {\n          ...prevState,\n          password: '',\n        };\n      });\n    }\n  };\n\n  const validEmail = async () => {\n    const emailReq = { email: loginInfo.email };\n    const res = await checkEmailAuth(emailReq);\n    if (!res) {\n      setNoAccountError('Account not found.');\n    }\n  };\n\n  return (\n    <div className=\"sign-in-screen auth-form\">\n      <h4>Welcome Back!</h4>\n      <form className=\"form sign-in\" onSubmit={handleSignIn}>\n        <div className=\"input-wrapper\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            required\n            id=\"email\"\n            name=\"email\"\n            onChange={(e) => handleChange(e, 'email', setLoginInfo)}\n            type=\"email\"\n            value={loginInfo['email']}\n            onFocus={() => setNoAccountError(false)}\n            onBlur={() => validEmail()}\n          />\n        </div>\n        <div className=\"form-error\">\n          <h6>{noAccountError}</h6>\n        </div>\n        <div className=\"input-wrapper\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            required\n            id=\"password\"\n            name=\"password\"\n            onChange={(e) => handleChange(e, 'password', setLoginInfo)}\n            type=\"password\"\n            value={loginInfo['password']}\n            onFocus={() => setAuthError(null)}\n          />\n        </div>\n        <div className=\"form-error\">\n          <h6>{authError}</h6>\n        </div>\n        {/* <SingleActionButton text=\"Log In\" type=\"submit\" /> */}\n        <button\n          onClick={async () => {\n            const signedInUser = await signIn(loginInfo);\n            if (signedInUser) {\n              dispatch(uiActions.updateUser(signedInUser));\n              // check this params functionality on edit land\n              navigate('EditProfile', {\n                userID: signedInUser._id,\n              });\n            } else {\n              setLoginInfo((prevState) => {\n                return {\n                  ...prevState,\n                  password: '',\n                };\n              });\n            }\n          }}\n        >\n          Log in\n        </button>\n      </form>\n      {/* Placeholder for future functionality  */}\n      <a href=\"#\">Forgot Password?</a>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}